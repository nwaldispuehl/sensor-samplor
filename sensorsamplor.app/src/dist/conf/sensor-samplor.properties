# SensorSamplor Configuration File
# ================================

# The the string identifier of the current platform. This might be the name of the computer or
# some geographic designation which helps to tell the different samples apart, resp. to assign
# them doubtless to a single sensor platform.
sensorsamplor.sensor_platform_identifier = myRaspberryPi

# The sensors to activate on this node. Provide the identification string of the sensor (e.g. 'temperature').
# Delimit multiple sensors with comma, e.g. 'temperature, co2'.
sensorsamplor.active_sensors = temperature, processorLoad

# The receivers to activate on this node. Provide the identification string of the receiver (e.g. 'console').
# Delimit multiple receivers with comma, e.g. 'console, logfile'.
sensorsamplor.active_receivers = console, logfile

# Determines which samples (of which platform and sensors) the receivers of this node should process.
# Use regular expressions. If an identifier matches any of the entries,
# a sample is processed. E.g. '.*' matches everything, or 'temperature' only matches respective sensors.
# However 'node[0-9]' matches 'node1' and 'node2' but not 'node15'.
sensorsamplor.receiver_sensor_type_pattern = .*
sensorsamplor.receiver_platform_identifier_pattern = .*

# The interval in seconds this node performs sensor measurements.
sensorsamplor.measurement_interval = 60

# Distributed bus configuration. Bus name, username and password needs to be the same for all participating nodes of the cluster.
sensorsamplor.bus.name = SensorSamplorBus
sensorsamplor.bus.username = myUsername
sensorsamplor.bus.password = myPassword
sensorsamplor.bus.interfaces = 10.100.10.*, 192.168.1.*

# Determines the number of samples the cluster keeps at most, resp. every node has access to at most.
# If you have many nodes/sensors, short sampling intervals and want to keep a lot of entries in memory, increase this
# value.
sensorsamplor.bus.buffer_size = 4096




#
# Sensor / Receiver Configuration

# The GPIO (general purpose input output) pin the AM2302 temperature sensor is attached.
sensorsamplor.sensor.temperature.gpio_data_pin = 4

# The directory the log file receiver should write its files into.
sensorsamplor.receiver.logfile.logging_directory = /var/log/sensor-samplor/





